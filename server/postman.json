{
	"info": {
		"_postman_id": "d6856fcc-56ad-433d-b2d4-ca8f4f7907cd",
		"name": "Ad server API testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Struture Test",
			"item": [
				{
					"name": "Create ad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e10ce223-0d3a-4aca-8397-8f82ade07bb0",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let obj = pm.response.json();",
									"let req = JSON.parse(pm.request.body.raw);",
									"",
									"pm.test(\"return an object with newly created ad id\", function () {",
									"    pm.expect(obj).to.be.an('object');",
									"    pm.expect(obj).to.have.property('id');",
									"    pm.expect(obj.id).to.be.an('string');",
									"});",
									"",
									"pm.test(\"Returns 20 char alhpanumeric id\", function () {",
									"    pm.expect(obj.id).to.match(/^[a-zA-Z0-9]{20}$/);",
									"});",
									"",
									"pm.collectionVariables.set(\"adID\", obj.id);",
									"pm.collectionVariables.set(\"adCampaign\", req.adData.campaign);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"adData\" : {\n        \"adName\": \"testName\",\n        \"campaign\": \"7QKUcWNNRkIQ89jUzqo7\",\n        \"size\": \"small\",\n        \"title\" : \"testKai\",\n        \"subtitle\" : \"testSubtitle\",\n        \"buttonAlign\": \"left\",\n        \"buttonText\": \"testText\",\n        \"url\": \"testUrl\",\n        \"altText\": \"testText\",\n        \"statistics\" : {   \n            \"impressions\": {\n                \"clicks\" : 0,\n                \"seen\" : 0,\n                \"ctr\" : 0\n            }  \n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/ad",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7153d974-f334-4f95-a745-cbf4933e4081",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let obj = pm.response.json();",
									"",
									"pm.test(\"return an object with newly created campaign id\", function () {",
									"    pm.expect(obj).to.be.an('object')",
									"    pm.expect(obj).to.have.property('id')",
									"    pm.expect(obj.id).to.be.an('string')",
									"});",
									"",
									"pm.test(\"Returns 20 char alhpanumeric id\", function () {",
									"    pm.expect(obj.id).to.match(/^[a-zA-Z0-9]{20}$/);",
									"});",
									"",
									"pm.collectionVariables.set(\"campaignID\", obj.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\n{\n    \"campaignName\": \"Test\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/campaign/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get campaign list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be1082fe-944f-44e3-b539-7e4c6aae5350",
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is an array\", function () {",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"});",
									"",
									"//Loop over compaign array and check each compaign is an object with property ads",
									"pm.test(\"Each compaign contains an ads array\", function () {",
									"    for(var i = 0; i < jsonData.length; i++) {",
									"        var obj = jsonData[i];",
									"        pm.expect(obj).to.be.an('object').to.have.property('ads');",
									"        pm.expect(obj.ads).to.be.an(\"array\");",
									"    }   ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ad list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb779690-7201-43ff-9b1a-cb43e60183b5",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is an array\", function () {",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"//Loop over ads array and check each ad has right properties",
									"pm.test(\"Each ad has right properties\", function () {",
									"    for(var i = 0; i < jsonData.length; i++) {",
									"        var obj = jsonData[i];",
									"        pm.expect(obj).to.have.property('adName');",
									"        pm.expect(obj).to.have.property('campaign');",
									"        pm.expect(obj).to.have.property('size');",
									"        pm.expect(obj).to.have.property('title');",
									"        pm.expect(obj).to.have.property('subtitle');",
									"        pm.expect(obj).to.have.property('buttonAlign');",
									"        pm.expect(obj).to.have.property('buttonText');",
									"        pm.expect(obj).to.have.property('url');",
									"        pm.expect(obj).to.have.property('altText');",
									"        pm.expect(obj).to.have.property('imageFile');",
									"        pm.expect(obj).to.have.property('statistics');",
									"        pm.expect(obj.statistics).to.have.property('clicks')",
									"        pm.expect(obj.statistics).to.have.property('seen')",
									"        pm.expect(obj.statistics).to.have.property('ctr')",
									"    }   ",
									"});",
									"",
									"pm.test(\"Each ad has right value type\", function () {",
									"    for(var i = 0; i < jsonData.length; i++) {",
									"        var obj = jsonData[i];",
									"        pm.expect(obj.adName).to.be.an('string');",
									"        pm.expect(obj.campaign).be.an('string')",
									"        pm.expect(obj.size).to.be.an('string');",
									"        pm.expect(obj.title).to.be.an('string');",
									"        pm.expect(obj.subtitle).to.be.an('string');",
									"        pm.expect(obj.buttonAlign).to.be.an('string');",
									"        pm.expect(obj.buttonText).to.be.an('string');",
									"        pm.expect(obj.url).to.be.an('string');",
									"        pm.expect(obj.altText).to.be.an('string');",
									"        pm.expect(obj.statistics).to.be.an('object');",
									"    }   ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get campaign by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39c19d7e-0cc0-4d70-a34d-cf36cfab47b8",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Campaign contains ads array\", function () {",
									"    pm.expect(jsonData).to.have.property('ads');",
									"    pm.expect(jsonData.ads).to.be.an(\"array\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/{{campaignID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"{{campaignID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Campaign contains newly created ad ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b9bb2d23-752f-47e7-89b0-777c27ef36e4",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let obj = pm.response.json();",
									"let adID = pm.variables.get(\"adID\");",
									"",
									"pm.test(\"Campaign contains newly created ad\", function() {",
									"    pm.expect(obj.ads).to.include(adID)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/{{adCampaign}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"{{adCampaign}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ad by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7048f0ac-2a63-4b88-88cb-1cfc76124f82",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Get the returned json Data",
									"let obj = pm.response.json();",
									"",
									"pm.test(\"Response body should be in the correct format\", function () {",
									"    pm.expect(obj).to.have.property('adName');",
									"    pm.expect(obj).to.have.property('campaign');",
									"    pm.expect(obj).to.have.property('size');",
									"    pm.expect(obj).to.have.property('title');",
									"    pm.expect(obj).to.have.property('subtitle');",
									"    pm.expect(obj).to.have.property('buttonAlign');",
									"    pm.expect(obj).to.have.property('buttonText');",
									"    pm.expect(obj).to.have.property('url');",
									"    pm.expect(obj).to.have.property('altText');",
									"    pm.expect(obj).to.have.property('statistics');",
									"    pm.expect(obj.statistics).to.have.property('impressions')",
									"    pm.expect(obj.statistics.impressions).to.have.property('clicks');",
									"    pm.expect(obj.statistics.impressions).to.have.property('seen');",
									"    pm.expect(obj.statistics.impressions).to.have.property('ctr');",
									"});",
									"",
									"pm.test(\"Response body should be in the correct value type\", function () {",
									"    pm.expect(obj.adName).to.be.an('string');",
									"    pm.expect(obj.campaign).be.an('string')",
									"    pm.expect(obj.size).to.be.an('string');",
									"    pm.expect(obj.title).to.be.an('string');",
									"    pm.expect(obj.subtitle).to.be.an('string');",
									"    pm.expect(obj.buttonAlign).to.be.an('string');",
									"    pm.expect(obj.buttonText).to.be.an('string');",
									"    pm.expect(obj.url).to.be.an('string');",
									"    pm.expect(obj.altText).to.be.an('string');",
									"    pm.expect(obj.statistics).to.be.an('object');",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad/{{adID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad",
								"{{adID}}"
							],
							"query": [
								{
									"key": "impression",
									"value": "true",
									"disabled": true
								},
								{
									"key": "clicked",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ad by title",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de6149b9-14b4-4700-965a-393667c73e22",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is an array\", function () {",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"//Loop over ads array and check each ad has right properties",
									"pm.test(\"Response body should be in the correct format\", function () {",
									"    for(var i = 0; i < jsonData.length; i++) {",
									"        var obj = jsonData[i];",
									"        pm.expect(obj).to.have.property('adName');",
									"        pm.expect(obj).to.have.property('campaign');",
									"        pm.expect(obj).to.have.property('size');",
									"        pm.expect(obj).to.have.property('title');",
									"        pm.expect(obj).to.have.property('subtitle');",
									"        pm.expect(obj).to.have.property('buttonAlign');",
									"        pm.expect(obj).to.have.property('buttonText');",
									"        pm.expect(obj).to.have.property('url');",
									"        pm.expect(obj).to.have.property('altText');",
									"        pm.expect(obj).to.have.property('imageFile');",
									"        pm.expect(obj).to.have.property('statistics');",
									"        pm.expect(obj.statistics).to.have.property('clicks')",
									"        pm.expect(obj.statistics).to.have.property('seen')",
									"        pm.expect(obj.statistics).to.have.property('ctr')",
									"    }   ",
									"});",
									"",
									"pm.test(\"Response body should be in the correct value type\", function () {",
									"    for(var i = 0; i < jsonData.length; i++) {",
									"        var obj = jsonData[i];",
									"        pm.expect(obj.adName).to.be.an('string');",
									"        pm.expect(obj.campaign).be.an('string')",
									"        pm.expect(obj.size).to.be.an('string');",
									"        pm.expect(obj.size).to.be.oneOf([\"small\", \"medium\", \"large\"]);",
									"        pm.expect(obj.title).to.be.an('string');",
									"        pm.expect(obj.subtitle).to.be.an('string');",
									"        pm.expect(obj.buttonAlign).to.be.an('string');",
									"        pm.expect(obj.buttonAlign).to.be.oneOf([\"left\", \"center\", \"right\"]);",
									"        pm.expect(obj.buttonText).to.be.an('string');",
									"        pm.expect(obj.url).to.be.an('string');",
									"        pm.expect(obj.altText).to.be.an('string');",
									"        pm.expect(obj.statistics).to.be.an('object');",
									"    }   ",
									"});",
									"",
									"pm.test(\"Returned title is same as the query pararm\", function() {",
									"    let title = pm.request.url.query.toObject().title;",
									"    for(var i = 0; i < jsonData.length; i++){",
									"        var obj = jsonData[i];",
									"        pm.expect(obj.title).to.eql(title)",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad?title=testKai",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad"
							],
							"query": [
								{
									"key": "title",
									"value": "testKai"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit ad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b26eb8d-d07a-46a9-a36d-c7d1483aa423",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body return 'Success'\", function () {",
									"    pm.response.to.have.body(\"Success\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"adData\" : {\n        \"adName\": \"updateName\",\n        \"campaign\": \"testCampaign\",\n        \"size\": \"small\",\n        \"title\" : \"testKai\",\n        \"subtitle\" : \"testSubtitle\",\n        \"buttonAlign\": \"left\",\n        \"buttonText\": \"testText\",\n        \"url\": \"testUrl\",\n        \"altText\": \"testText\",\n        \"statistics\" : {   \n            \"impressions\": {\n                \"clicks\" : 0,\n                \"seen\" : 0,\n                \"ctr\" : 0\n            }  \n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/ad/{{adID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad",
								"{{adID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06d61b14-81ac-4230-80bd-9ec183d6c46a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body return 'Success'\", function () {",
									"    pm.response.to.have.body(\"Success\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"campaignName\": \"Test\",\n    \"ads\": [\"aaaaaaaaaaaaaaaaaaaa\"]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3001/campaign/{{campaignID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"{{campaignID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ad",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f90d7b1-d6c2-4333-b7f7-797dbf716b1c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad/{{adID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad",
								"{{adID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73c545e1-43ce-4884-ba98-cb214c43161d",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/{{campaignID}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"{{campaignID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove the ad from campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "28c4a617-3fb4-45c8-9205-a426905fbe64",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let obj = pm.response.json();",
									"let adID = pm.variables.get(\"adID\");",
									"",
									"pm.test(\"Campaign does not contain newly created ad\", function() {",
									"    pm.expect(obj.ads).to.not.include(adID)",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/{{adCampaign}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"{{adCampaign}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Error Handling Test",
			"item": [
				{
					"name": "Get a campaign with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76cf6df5-99c6-48f5-a2c6-fcb985e64025",
								"exec": [
									"pm.test(\"Status Code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is in correct format\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"error\")",
									"    pm.expect(jsonData).to.have.property(\"errorCode\")",
									"    pm.expect(jsonData.errorCode).to.eql(404)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/12345",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"12345"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an ad with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b80d040c-d6ce-40fb-9778-07a28e10542c",
								"exec": [
									"pm.test(\"Status Code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is in correct format\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"error\")",
									"    pm.expect(jsonData).to.have.property(\"errorCode\")",
									"    pm.expect(jsonData.errorCode).to.eql(404)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad/12345",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad",
								"12345"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an ad with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "483520ba-5bcc-4cb2-a73d-2d60d66b46d9",
								"exec": [
									"pm.test(\"Status Code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is in correct format\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"error\")",
									"    pm.expect(jsonData).to.have.property(\"errorCode\")",
									"    pm.expect(jsonData.errorCode).to.eql(404)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad/12345",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad",
								"12345"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an campaign with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ff77963f-273b-4583-a160-589aec91511c",
								"exec": [
									"pm.test(\"Status Code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is in correct format\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"error\")",
									"    pm.expect(jsonData).to.have.property(\"errorCode\")",
									"    pm.expect(jsonData.errorCode).to.eql(404)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/12345",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"12345"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an ad wirh wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcd527c8-5efe-42e4-afa8-faccb1b69a5c",
								"exec": [
									"pm.test(\"Status Code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is in correct format\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"error\")",
									"    pm.expect(jsonData).to.have.property(\"errorCode\")",
									"    pm.expect(jsonData.errorCode).to.eql(404)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/ad/12345",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"ad",
								"12345"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a campaign with wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "971f2d8a-f1e9-418e-8ebb-fc84cad06b61",
								"exec": [
									"pm.test(\"Status Code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"//Get the returned json Data",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Return type is in correct format\", function () {",
									"    pm.expect(jsonData).to.be.an(\"object\");",
									"    pm.expect(jsonData).to.have.property(\"error\")",
									"    pm.expect(jsonData).to.have.property(\"errorCode\")",
									"    pm.expect(jsonData.errorCode).to.eql(404)",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://localhost:3001/campaign/12345",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3001",
							"path": [
								"campaign",
								"12345"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "d7c2e92d-8220-4323-a22f-eb1c10741051",
			"key": "adID",
			"value": "x2rObBLog2OT1zT6KPhZ"
		},
		{
			"id": "b7fefc48-f667-4105-8066-659b7781f0eb",
			"key": "campaignID",
			"value": "22nNIbcM8yhhjncsa1q6"
		},
		{
			"id": "486697eb-93b5-4e81-a68b-2f9c8857a1a2",
			"key": "adCampaign",
			"value": "7QKUcWNNRkIQ89jUzqo7"
		}
	],
	"protocolProfileBehavior": {}
}